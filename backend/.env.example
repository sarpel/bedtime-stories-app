# =============================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION TEMPLATE
# =============================================================================
# Copy this file to backend/.env and fill in your actual API keys
#
# SECURITY WARNING: Never commit files with real API keys to version control!
# This template provides safe defaults and documentation for all settings.
# =============================================================================

# -----------------------------------------------------------------------------
# OPENAI CONFIGURATION (Primary LLM Provider)
# -----------------------------------------------------------------------------
# Get your API key from: https://platform.openai.com/api-keys
# Required for story generation using GPT models
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4o-mini
OPENAI_ENDPOINT=https://api.openai.com/v1/chat/completions

# -----------------------------------------------------------------------------
# ELEVENLABS CONFIGURATION (Primary TTS Provider)
# -----------------------------------------------------------------------------
# Get your API key from: https://elevenlabs.io/docs/api-reference/authentication
# Required for high-quality Turkish voice synthesis
ELEVENLABS_API_KEY=your_elevenlabs_api_key_here
ELEVENLABS_MODEL=eleven_turbo_v2_5
# Voice ID for Turkish female voice (child-friendly)
ELEVENLABS_VOICE_ID=xsGHrtxT5AdDzYXTQT0d
ELEVENLABS_ENDPOINT=https://api.elevenlabs.io/v1/text-to-speech

# -----------------------------------------------------------------------------
# GEMINI LLM CONFIGURATION (Alternative LLM Provider)
# -----------------------------------------------------------------------------
# Get your API key from: https://aistudio.google.com/app/apikey
# Optional: Alternative to OpenAI for story generation
GEMINI_LLM_API_KEY=your_gemini_llm_api_key_here
GEMINI_LLM_MODEL=gemini-2.0-flash-thinking-exp-1219
GEMINI_LLM_ENDPOINT=https://generativelanguage.googleapis.com/v1beta/models

# -----------------------------------------------------------------------------
# GEMINI TTS CONFIGURATION (Alternative TTS Provider)
# -----------------------------------------------------------------------------
# Alternative to ElevenLabs for text-to-speech
GEMINI_TTS_API_KEY=your_gemini_tts_api_key_here
GEMINI_TTS_MODEL=gemini-2.0-flash-thinking-exp-1219
# Turkish voice options: Puck, Despina, Callisto
GEMINI_TTS_VOICE_ID=Despina
GEMINI_TTS_ENDPOINT=https://generativelanguage.googleapis.com/v1beta/models

# -----------------------------------------------------------------------------
# SERVER CONFIGURATION
# -----------------------------------------------------------------------------
# Production environment setting
NODE_ENV=production

# Server port (8080 for Pi deployment, 3001 for development)
# Note: Pi installer uses 8080, development uses 3001
PORT=8080

# Bind address (0.0.0.0 for Pi to accept external connections)
HOST=0.0.0.0

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# SQLite database file path (relative to backend directory)
DATABASE_PATH=./database/stories.db

# Database backup interval in milliseconds (1 hour = 3600000)
DATABASE_BACKUP_INTERVAL=3600000

# -----------------------------------------------------------------------------
# MEDIA & STORAGE CONFIGURATION
# -----------------------------------------------------------------------------
# Directory for storing generated audio files
# Pi deployment: /var/lib/storyapp/media
# Development: ./backend/audio
MEDIA_DIR=/var/lib/storyapp/media

# -----------------------------------------------------------------------------
# RATE LIMITING & SECURITY
# -----------------------------------------------------------------------------
# API rate limiting window in milliseconds (15 minutes = 900000)
API_RATE_LIMIT_WINDOW_MS=900000

# Maximum requests per window for API endpoints
API_RATE_LIMIT_MAX_REQUESTS=50

# Database operation rate limiting (1 minute = 60000)
DB_RATE_LIMIT_WINDOW_MS=60000

# Maximum database requests per window
DB_RATE_LIMIT_MAX_REQUESTS=10

# -----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# -----------------------------------------------------------------------------
# Log level: error, warn, info, debug
# Production: warn, Development: info
LOG_LEVEL=warn

# Maximum log file size in bytes (10MB = 10485760)
LOG_FILE_MAX_SIZE=10485760

# Number of log files to keep in rotation
LOG_FILE_MAX_FILES=5

# -----------------------------------------------------------------------------
# SESSION & SECURITY (Optional)
# -----------------------------------------------------------------------------
# Session secret for signed cookies (generate random string)
SESSION_SECRET=your_secure_random_session_secret_here

# CORS origin for cross-origin requests (usually not needed for Pi deployment)
CORS_ORIGIN=

# -----------------------------------------------------------------------------
# HEALTH CHECK & MONITORING
# -----------------------------------------------------------------------------
# Health check interval in milliseconds (30 seconds = 30000)
HEALTH_CHECK_INTERVAL=30000

# Enable performance metrics collection
ENABLE_METRICS=true

# Metrics server port (separate from main app)
METRICS_PORT=9090

# -----------------------------------------------------------------------------
# PERFORMANCE OPTIMIZATION
# -----------------------------------------------------------------------------
# Compression level (1-9, higher = better compression, more CPU)
# Pi Zero 2 W: Use 6 for balance of compression and CPU usage
COMPRESSION_LEVEL=6

# Cache max age in seconds (24 hours = 86400)
CACHE_MAX_AGE=86400

# -----------------------------------------------------------------------------
# RASPBERRY PI SPECIFIC SETTINGS
# -----------------------------------------------------------------------------
# Audio output device (leave blank for auto-detection)
AUDIO_DEVICE=

# Audio buffer size for low-latency playback
AUDIO_BUFFER_SIZE=1024

# Maximum concurrent audio generation requests (memory constraint)
MAX_CONCURRENT_TTS=2

# Maximum story length to prevent memory exhaustion
MAX_STORY_LENGTH=2000

# Enable hardware temperature monitoring
ENABLE_TEMP_MONITORING=true

# Temperature threshold for throttling (Celsius)
TEMP_THROTTLE_THRESHOLD=70

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================
#
# REQUIRED API KEYS:
# - Either OPENAI_API_KEY or GEMINI_LLM_API_KEY for story generation
# - Either ELEVENLABS_API_KEY or GEMINI_TTS_API_KEY for voice synthesis
#
# RASPBERRY PI DEPLOYMENT:
# 1. Copy this file to: backend/.env
# 2. Fill in your actual API keys (remove _here suffixes)
# 3. Adjust paths for Pi environment:
#    - PORT=8080 (Pi deployment standard)
#    - MEDIA_DIR=/var/lib/storyapp/media
#    - LOG_LEVEL=warn (reduce SD card writes)
#
# MEMORY OPTIMIZATION (for 512MB Pi Zero 2 W):
# - Set MAX_CONCURRENT_TTS=1 for very constrained memory
# - Use LOG_LEVEL=error to minimize logging overhead
# - Consider setting COMPRESSION_LEVEL=3 for less CPU usage
#
# SECURITY CHECKLIST:
# ✓ Never commit .env files with real keys
# ✓ Use secure random strings for SESSION_SECRET
# ✓ Restrict CORS_ORIGIN if serving publicly
# ✓ Regular backup of DATABASE_PATH
# ✓ Monitor LOG_FILE_MAX_SIZE to prevent disk fill
#
# =============================================================================
